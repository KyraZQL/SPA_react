{"version":3,"sources":["components/SearchList/ListElem/ListElem.module.scss","components/SearchList/SearchList.module.scss","components/DetailView/DetailView.module.scss","components/Home/Home.jsx","components/Example/Example.jsx","components/Pokemon/PokemonView/PokemonView.jsx","components/Gallery/Gallery.jsx","components/Pokemon/Pokemon.jsx","components/SearchList/ListElem/ListElem.jsx","components/SearchList/SearchList.jsx","components/DetailView/DetailView.jsx","components/App/App.jsx","serviceWorker.js","index.js","components/Pokemon/PokemonView/PokemonView.module.scss","components/Example/Example.module.scss","components/Pokemon/Pokemon.module.scss"],"names":["module","exports","ListElem","SearchList","ButtonContainer","Prev","Next","next","prev","Home","react_default","a","createElement","className","HomeCss","HomeHeader","Component","Example","ExampleCss","ExampleHeader","Link","to","Button","PokemonView","Object","entries","this","props","pokemon","length","constructor","Card","PokemonViewCss","abilitiesView","abilities","map","ability","idx","Label","key","name","Content","Header","PokemonViewHeader","Meta","id","src","sprites","front_default","alt","concat","Gallery","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","value","genres","selectedGenre","movies","filteredmovies","baseUrl","API_KEY","suffix","mbaseUrl","msuffix","url","axios","get","then","response","console","log","setState","data","catch","error","movie_url","results","item","target","movie","prevState","genre_id","parseInt","filter","genre_ids","includes","_this2","onClick","clickHandler","bind","genre","pathname","list","original_title","poster_path","Search","middle","inputChangeHandler","assertThisInitialized","event","_this3","SearchListCss","Input","onChange","label","placeholder","title","DetailView","properties","location","property","match","params","info","curidx","previd","nextid","elem","curIndex","findIndex","getPrevId","getNextId","newId","newIndex","_this4","nextProperty","_this5","Container","fluid","Image","backdrop_path","overview","homepage","App","BrowserRouter","Route","exact","path","component","Detail","Boolean","window","hostname","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","PokemonView-header","Example-header","Pokemon","Pokemon-header"],"mappings":"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","file":"static/js/main.9ab18a49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListElem\":\"ListElem_ListElem__2U8EO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchList\":\"SearchList_SearchList__2G_kp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonContainer\":\"DetailView_ButtonContainer__3NGeK\",\"Prev\":\"DetailView_Prev__2ZK33\",\"Next\":\"DetailView_Next__-4Xf3\",\"next\":\"DetailView_next__3Sfml\",\"prev\":\"DetailView_prev__OTRSH\"};","import React, { Component } from 'react'\r\nimport { Button } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// import SearchList from '../SearchList/SearchList.jsx'\r\n// 'Home' is already defined as the class name, so provide an alias\r\n// 'Home-header' from the SCSS file gets transformed to 'HomeHeader'\r\n//    because '-' is not allowed in JS variable names\r\nimport { Home as HomeCss, HomeHeader } from './Home.module.scss'\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className={HomeCss}>\r\n        <h1 className={HomeHeader}>Welcome to the MP2!</h1>\r\n    \r\n        {/* <Link to=\"/pokemon\">\r\n          <Button>\r\n            Click here to go to the demo\r\n          </Button>\r\n        </Link> */}\r\n        {/* <Link to=\"/gallery\">\r\n          <Button>\r\n            Click here to go to the gallry\r\n          </Button>\r\n        </Link> */}\r\n        {/* <GalleryNav /> */}\r\n        {/* <SearchList /> */}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from 'semantic-ui-react'\r\n\r\nimport { Example as ExampleCss, ExampleHeader } from './Example.module.scss'\r\n\r\nclass Example extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className={ExampleCss}>\r\n        <h1 className={ExampleHeader}>This is another page!</h1>\r\n        <Link to=\"/\">\r\n          <Button>\r\n            Click here to go back to the landing page\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Example\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Card, Label } from 'semantic-ui-react'\r\n\r\nimport { PokemonView as PokemonViewCss, PokemonViewHeader } from './PokemonView.module.scss'\r\n\r\nclass PokemonView extends Component {\r\n  render() {\r\n    // Check if the object is empty\r\n    const noPokemon = Object.entries(this.props.pokemon).length === 0\r\n      && this.props.pokemon.constructor === Object;\r\n\r\n    if (noPokemon) {\r\n      return (\r\n        <Card className={PokemonViewCss}>\r\n          <h3>No Pokemon yet!</h3>\r\n        </Card>\r\n      )\r\n    } else {\r\n      // Iterate over the Pokemon's abilities and generate a label for each.\r\n      const abilitiesView = this.props.pokemon.abilities.map((ability, idx) => {\r\n        return (\r\n          // Using `idx` as a key is generally discouraged:\r\n          // https://reactjs.org/docs/lists-and-keys.html#keys\r\n          <Label key={idx}>\r\n            {ability.ability.name}\r\n          </Label>\r\n        )\r\n      });\r\n\r\n      // Display some data about the Pokemon, and its abilities.\r\n      return (\r\n        <Card className={PokemonViewCss}>\r\n          <Card.Content>\r\n            <Card.Header className={PokemonViewHeader}>\r\n              {this.props.pokemon.name}\r\n            </Card.Header>\r\n            <Card.Meta>\r\n              Pokedex #{this.props.pokemon.id}\r\n            </Card.Meta>\r\n            <img\r\n              src={this.props.pokemon.sprites.front_default}\r\n              alt={`Sprite of ${this.props.pokemon.name}`}\r\n            />\r\n            <h4>Abilities</h4>\r\n            {abilitiesView}\r\n          </Card.Content>\r\n        </Card>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nPokemonView.propTypes = {\r\n  pokemon: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    id: PropTypes.number,\r\n    abilities: PropTypes.arrayOf(PropTypes.shape({\r\n      ability: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        url: PropTypes.string,\r\n      })\r\n    })),\r\n    sprites: PropTypes.object,\r\n  }),\r\n}\r\n\r\nexport default PokemonView\r\n","import React, { Component } from 'react'\r\nimport { Button, Card } from 'semantic-ui-react'\r\nimport axios from 'axios'\r\n// import { Link } from 'react-router-dom'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport './Gallery.scss'\r\nimport Example from '../Example/Example.jsx';\r\n\r\n// import GalleryElem from './GalleryElem/GalleryElem'\r\n\r\n// import {  Gallery as GalleryCss, Genre, container } from './GalleryNav.module.scss'\r\n\r\n\r\nclass Gallery extends Component {\r\n\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      value: '',\r\n      genres: [],\r\n      selectedGenre: '',\r\n      movies: [],\r\n      filteredmovies: [],\r\n    };\r\n\r\n    // this.clickHandler = this.clickHandler.bind(this);\r\n\r\n\r\n    this.baseUrl = 'https://api.themoviedb.org/3/genre/movie/list?api_key=';\r\n    this.API_KEY = 'cf85a3c0ab8d5363ec6e2d139c08cdbb'; \r\n    this.suffix = '&language=en-US';\r\n   \r\n    this.mbaseUrl = 'https://api.themoviedb.org/3/discover/movie?api_key=';\r\n    this.msuffix = '&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=';\r\n   \r\n    let url = `${this.baseUrl}${this.API_KEY}${this.suffix}`;\r\n\r\n    axios.get(url).then((response) => {\r\n      console.log(response);\r\n\r\n      this.setState({\r\n        genres: response.data.genres\r\n      });\r\n\r\n      console.log(this.state.genres);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n\r\n\r\n    let movie_url = `${this.mbaseUrl}${this.API_KEY}${this.msuffix}`;\r\n\r\n    axios.get(movie_url).then((response) => {\r\n      console.log(response);\r\n\r\n      this.setState({\r\n        movies: response.data.results,\r\n        filteredmovies: response.data.results,\r\n      });\r\n\r\n      console.log(this.state.movies);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n    console.log(`${movie_url}`);\r\n  }\r\n\r\n  clickHandler(item) {\r\n    console.log(`got new item id ${item.target.id}`);\r\n    this.setState({\r\n      selectedGenre: item.target.id,\r\n    });\r\n\r\n    this.state.movies.map((movie, idx) => {\r\n      console.log(\"before filter movie\", movie.id, idx);\r\n    });\r\n\r\n    if(item.target.id === \"\") {\r\n      this.setState((prevState) => {\r\n        return{\r\n          filteredmovies: prevState.movies\r\n        }\r\n      })\r\n    } else {  \r\n      const genre_id = parseInt(item.target.id);\r\n      this.setState((prevState) => {\r\n        return{\r\n          filteredmovies: prevState.movies.filter((movie) => {\r\n            console.log('movie genre ids', movie.genre_ids, 'id', genre_id);\r\n            console.log(movie.genre_ids.includes(genre_id));\r\n            return movie.genre_ids.includes(genre_id);\r\n          }),\r\n        }\r\n      });\r\n    }\r\n    this.state.filteredmovies.map((movie, idx) => {\r\n      console.log(\"after filter movie\", movie.id, idx);\r\n    });\r\n  }\r\n \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Gallery\">\r\n        <div className=\"GenreContainer\">\r\n            <div id=\"\" onClick={this.clickHandler.bind(this)} className=\"genre\">\r\n              {/* <p>{genre.id}</p> */}\r\n              <p>All</p>\r\n            </div>\r\n          {this.state.genres.map((genre) =>(\r\n            <div key={genre.id} id={genre.id} onClick={this.clickHandler.bind(this)} className=\"genre\">\r\n              {/* <p>{genre.id}</p> */}\r\n              <p>{genre.name}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"MovieContainer\"> \r\n          {this.state.filteredmovies.map((movie) =>(\r\n            <Link to={{\r\n              pathname: \"/detail/\" + movie.id, \r\n              state: {\r\n                list: this.state.filteredmovies\r\n              }\r\n              }}> \r\n              <Card key = {movie.id}>\r\n                <Card.Content>\r\n                  <Card.Header>\r\n                      <div>\r\n                          <p>{movie.original_title}</p>\r\n                      </div>\r\n                  </Card.Header>\r\n              \r\n                  <img src={'https://image.tmdb.org/t/p/w500' + movie.poster_path} />\r\n                  {/* alt={'https://image.tmdb.org/t/p/w500' + movie.backdrop_path} */}\r\n              \r\n                </Card.Content>\r\n\r\n              </Card>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Gallery\r\n","import React, { Component } from 'react'\r\nimport { Button, Input } from 'semantic-ui-react'\r\nimport axios from 'axios'\r\n\r\nimport PokemonView from './PokemonView/PokemonView'\r\n\r\nimport { Pokemon as PokemonCss, PokemonHeader } from './Pokemon.module.scss'\r\n\r\nclass Pokemon extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      value: '',\r\n      pokemon: {},\r\n    };\r\n\r\n    this.baseUrl = 'https://pokeapi.co/api/v2/pokemon/';\r\n\r\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n    this.clickHandler = this.clickHandler.bind(this);\r\n  }\r\n\r\n  clickHandler() {\r\n    // Form the URL\r\n    let url = `${this.baseUrl}${this.state.value}`;\r\n\r\n    // GET some data back!\r\n    axios.get(url).then((response) => {\r\n      console.log(response);\r\n\r\n      this.setState({\r\n        pokemon: response.data\r\n      });\r\n\r\n      console.log(this.state.pokemon);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  inputChangeHandler(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={PokemonCss}>\r\n        <h1 className={PokemonHeader}>Let's GET us a Pokemon!</h1>\r\n\r\n        <Input\r\n          onChange={this.inputChangeHandler}\r\n          label='https://pokeapi.co/api/v2/pokemon/'\r\n          placeholder='Pokemon # here!'\r\n          value={this.state.value}\r\n        />\r\n        <Button onClick={this.clickHandler}>\r\n          GET\r\n        </Button>\r\n\r\n        <PokemonView pokemon={this.state.pokemon} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Pokemon\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Card } from 'semantic-ui-react'\r\n\r\nimport { ListElem as ListElemCss } from './ListElem.module.scss'\r\n\r\nclass ListElem extends Component {\r\n  render() {\r\n    // Check if the object is empty\r\n    const noElem = Object.entries(this.props.movies).length === 0\r\n      && this.props.movies.constructor === Object;\r\n\r\n    if (noElem) {\r\n      return (\r\n        <Card className={ListElemCss}>\r\n          <h3>No Movies yet!</h3>\r\n        </Card>\r\n      )\r\n    } else {\r\n    //   const movieView = this.props.movies;//.abilities.map((ability, idx) => {\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {this.props.movies.map((movie) =>(\r\n                        <div key = {movie.id}>\r\n                        <p>{movie.title}</p>\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n       // )\r\n      //}\r\n      );\r\n\r\n      // Display some data about the Pokemon, and its abilities.\r\n      // return (\r\n      //   <Card className={GalleryElemCss}>\r\n      //     <Card.Content>\r\n      //       <Card.Header className={GalleryElemHeader}>\r\n      //         {this.props.pokemon.name}\r\n      //       </Card.Header>\r\n      //       <Card.Meta>\r\n      //         Pokedex #{this.props.pokemon.id}\r\n      //       </Card.Meta>\r\n      //       <img\r\n      //         src={this.props.pokemon.sprites.front_default}\r\n      //         alt={`Sprite of ${this.props.pokemon.name}`}\r\n      //       />\r\n      //       <h4>Abilities</h4>\r\n      //       {abilitiesView}\r\n      //     </Card.Content>\r\n      //   </Card>\r\n      // )\r\n    }\r\n  }\r\n}\r\n\r\nListElem.propTypes = {\r\n  movie: PropTypes.shape({\r\n    name: PropTypes.object,\r\n    // id: PropTypes.number,\r\n    // abilities: PropTypes.arrayOf(PropTypes.shape({\r\n    //   ability: PropTypes.shape({\r\n    //     name: PropTypes.string,\r\n    //     url: PropTypes.string,\r\n    //   })\r\n    // })),\r\n    // sprites: PropTypes.object,\r\n  }),\r\n}\r\n\r\nexport default ListElem\r\n","import React, { Component } from 'react'\r\nimport { Button, Input } from 'semantic-ui-react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport ListElem from './ListElem/ListElem'\r\n\r\nimport { SearchList as SearchListCss} from './SearchList.module.scss'\r\n\r\n// const { API_KEY } = 'cf85a3c0ab8d5363ec6e2d139c08cdbb';\r\n\r\nclass Search extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      value: '',\r\n      movies: [],\r\n    };\r\n    this.baseUrl = 'https://api.themoviedb.org/3/search/movie?api_key=';\r\n    this.API_KEY = 'cf85a3c0ab8d5363ec6e2d139c08cdbb';\r\n    this.middle = '&language=en-US&query=';\r\n    this.suffix = '&page=1&include_adult=false';\r\n\r\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\r\n    // this.clickHandler = this.clickHandler.bind(this);\r\n  }\r\n\r\n  clickHandler() {\r\n    // Form the URL\r\n    let url = `${this.baseUrl}${this.API_KEY}${this.middle}${this.state.value}${this.suffix}`;\r\n    // console.log(`${item.target.id}`);\r\n    // GET some data back!\r\n    axios.get(url).then((response) => {\r\n      console.log(response);\r\n      \r\n      this.setState({\r\n        movies: response.data.results\r\n      });\r\n\r\n      console.log(this.state.movies);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  inputChangeHandler(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={SearchListCss}>\r\n\r\n        <Input\r\n          onChange={this.inputChangeHandler}\r\n          label='Search movie'\r\n          placeholder='Input # here!'\r\n          value={this.state.value}\r\n        />\r\n        <Button onClick={this.clickHandler.bind(this)}>\r\n          GET\r\n        </Button>\r\n\r\n        <p>{this.state.value}</p>\r\n        <p>place holder for SearchList</p>\r\n        <div className=\"MovieContainer\"> \r\n          {this.state.movies.map((movie) =>(\r\n            <div key = {movie.id}>\r\n              <Link to={{\r\n                pathname: \"/detail/\" + movie.id, \r\n                state: {\r\n                  list: this.state.movies\r\n                }\r\n              }}>\r\n              <img src={'https://image.tmdb.org/t/p/w500' + movie.poster_path} />\r\n              {/* alt={'https://image.tmdb.org/t/p/w500' + movie.backdrop_path} */}\r\n              <p>{movie.title}</p>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {/* <ListElem movies={this.state.movies}/> */}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Search\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\nimport { Card, Label, Icon, Image, Container, Header} from 'semantic-ui-react'\r\nimport './DetailView.module.scss'\r\n\r\nclass DetailView extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            properties: props.location.state.list,\r\n            property: props.match.params.id,\r\n            info: '',\r\n            curidx: '',\r\n            previd: '',\r\n            nextid: '',\r\n        } \r\n\r\n\r\n      \r\n        this.baseUrl = 'https://api.themoviedb.org/3/movie/';\r\n        this.API_KEY = '?api_key=cf85a3c0ab8d5363ec6e2d139c08cdbb'; \r\n        this.suffix = '&language=en-US';\r\n\r\n      \r\n        let url = `${this.baseUrl}${this.state.property}${this.API_KEY}${this.suffix}`;\r\n\r\n        axios.get(url).then((response) => {\r\n            // console.log(\"respon\" + response);\r\n\r\n            this.setState({\r\n                info: response.data,\r\n            });\r\n            console.log(\"in did mount????????????? \" + \"properties\" + this.state.properties + \"property\" + this.state.property);\r\n        \r\n\r\n        }).catch((error) => {\r\n            console.log('error', error);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('will mount', this.state.property);\r\n        this.state.properties.map((elem) => {\r\n            console.log(\"got elem in the list\" + elem.id);\r\n        });\r\n        let curIndex = this.state.properties.findIndex((elem) => (this.state.property == elem.id));\r\n        this.setState({\r\n            curidx: curIndex,\r\n        });\r\n        console.log('cur idx', this.state.curidx);\r\n\r\n        this.getPrevId();\r\n        this.getNextId();\r\n\r\n    }\r\n        // const { id } = this.props.match.params;\r\n        // const { list } = this.props.location.state;\r\n        // this.setState({\r\n        //     properties: list,\r\n        //     property: id,\r\n        // })\r\n        // let curIndex = this.state.properties.findIndex((elem) => (this.state.property == elem.id));\r\n        // this.setState({\r\n        //     curidx: curIndex,\r\n        // });\r\n        // this.getPrevId();\r\n        // this.getNextId();\r\n    //     this.id = parseInt(id);\r\n    //     this.list = list;\r\n    //     this.baseUrl = 'https://api.themoviedb.org/3/movie/';\r\n    //     this.API_KEY = '?api_key=cf85a3c0ab8d5363ec6e2d139c08cdbb'; \r\n    //     this.suffix = '&language=en-US';\r\n\r\n      \r\n    //     let url = `${this.baseUrl}${this.id}${this.API_KEY}${this.suffix}`;\r\n\r\n    //     axios.get(url).then((response) => {\r\n    //         console.log(\"respon\" + response);\r\n\r\n    //         this.setState({\r\n    //             info: response.data,\r\n    //         });\r\n    //         console.log(\"in did mount????????????? \" + id + \"properties\" + this.state.properties + \"property\" + this.state.property);\r\n        \r\n\r\n    //     }).catch((error) => {\r\n    //         console.log('error', error);\r\n    //     });\r\n    // }     \r\n    getPrevId() {\r\n        // this.state.properties.map((elem) => {\r\n        //     console.log(\"got elem in the list\" + elem.id);\r\n        // });\r\n        // let curIndex = this.state.curidx;\r\n\r\n        let curIndex = this.state.properties.findIndex((elem) => (this.state.property == elem.id));\r\n        console.log('cur Index' , curIndex);\r\n        let newId = 0;\r\n        if(curIndex !== 0 && curIndex !== -1) {\r\n            const newIndex = curIndex - 1;\r\n            newId = this.state.properties[newIndex].id;\r\n        } else {\r\n            const newIndex = this.state.properties.length -1;\r\n             newId = this.state.properties[newIndex].id;\r\n        }\r\n        console.log(\"prev id should be \" + newId);\r\n        this.setState({\r\n            previd: newId,\r\n        });\r\n        return newId;\r\n    }\r\n    getNextId() {\r\n      \r\n        // let curIndex = this.state.curidx;\r\n        let curIndex = this.state.properties.findIndex((elem) => (this.state.property == elem.id));\r\n        console.log('cur Index' , curIndex);\r\n      \r\n        let newId = 0;\r\n        if(curIndex !== this.state.properties.length -1 && curIndex !== -1) {\r\n            const newIndex = curIndex + 1;\r\n            newId = this.state.properties[newIndex].id;\r\n        } else {\r\n            const newIndex = 0;\r\n             newId = this.state.properties[newIndex].id;\r\n        }\r\n        console.log(\"next id should be \" + newId);\r\n        this.setState({\r\n            nextid: newId,\r\n        });\r\n        return newId;\r\n    }\r\n    componentWillReceiveProps(nextProperty) {\r\n        console.log('receive props');\r\n        // if(this.props.match.params !== nextProperty.match.params) {\r\n            const { id } = nextProperty.match.params;\r\n            const { list } = nextProperty.location.state;\r\n            this.setState({\r\n                properties: list,\r\n                property: id,\r\n            })\r\n            let curIndex = this.state.properties.findIndex((elem) => (this.state.property == elem.id));\r\n            this.setState({\r\n                curidx: curIndex,\r\n            });\r\n            console.log('cur idx in the will receive props ', this.state.curidx);\r\n            this.getPrevId();\r\n            this.getNextId();\r\n\r\n            let url = `${this.baseUrl}${id}${this.API_KEY}${this.suffix}`;\r\n\r\n            axios.get(url).then((response) => {\r\n                console.log(\"respon\" + response);\r\n\r\n                this.setState({\r\n                    info: response.data,\r\n                });\r\n                console.log(\"already update property--------- \" + \"property\" + this.state.property);\r\n            }).catch((error) => {\r\n                console.log('error', error);\r\n            });\r\n        // }\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <Container fluid className=\"MovieContainer\">\r\n              <div className=\"ButtonContainer\">\r\n                <Link className=\"Prev\" to={{\r\n                    pathname: \"/detail/\" + this.state.previd, \r\n                    state: {\r\n                        list: this.state.properties\r\n                    }\r\n                }}>\r\n                   {/* <button className=\"Prev\"> */}\r\n                   &#10094; Prev\r\n                    {/* </button> */}\r\n                </Link>\r\n                <Link className=\"Next\" to={{\r\n                    pathname: \"/detail/\" + this.state.nextid, \r\n                    state: {\r\n                        list: this.state.properties\r\n                    }\r\n                }}>\r\n                   Next &#10095;\r\n                </Link>\r\n                </div>\r\n           \r\n               \r\n                <Image src={'https://image.tmdb.org/t/p/w500' + this.state.info.backdrop_path}/>\r\n                <p>{this.state.info.overview}</p>\r\n                <Header>{this.state.info.homepage}</Header>\r\n            </Container>\r\n            \r\n        );\r\n\r\n    }\r\n}\r\n\r\n// DetailView.propTypes = {\r\n//   movie: PropTypes.shape({\r\n//     id: PropTypes.number,\r\n//     name: PropTypes.string,\r\n\r\n//   }),\r\n// }\r\n\r\nexport default DetailView\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n// Include your new Components here\r\nimport './App.scss'\r\nimport Home from '../Home/Home.jsx';\r\nimport Example from '../Example/Example.jsx';\r\nimport Pokemon from '../Pokemon/Pokemon.jsx';\r\nimport Gallery from '../Gallery/Gallery.jsx'\r\nimport Search from '../SearchList/SearchList.jsx'\r\nimport Detail from '../DetailView/DetailView'\r\n\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n      <div>\r\n        <header>\r\n        <ul className=\"nav\">\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/example\">example</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/gallery\">gallery</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/search\">search</Link>\r\n          </li>\r\n        </ul>\r\n        </header>\r\n\r\n        {/* <hr /> */}\r\n\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/example\" component={Example} />\r\n        <Route path=\"/gallery\" component={Gallery} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/detail/:id\" component={Detail} />\r\n      </div>\r\n    </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PokemonView\":\"PokemonView_PokemonView__2VdNa\",\"PokemonView-header\":\"PokemonView_PokemonView-header__14UDY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Example\":\"Example_Example__6K9CN\",\"Example-header\":\"Example_Example-header__1S0nh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pokemon\":\"Pokemon_Pokemon__EBxIV\",\"Pokemon-header\":\"Pokemon_Pokemon-header__123b8\"};"],"sourceRoot":""}